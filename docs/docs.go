// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/refresh-token": {
            "post": {
                "description": "Refresh Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AuthResponseDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/validate-google-id-token": {
            "post": {
                "description": "Validate Google ID Token (Login)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Validate Google ID Token",
                "parameters": [
                    {
                        "description": "Google ID Token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ValidateGoogleIdTokenDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AuthResponseDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/cp/{join_code}": {
            "get": {
                "description": "Get CP details by join code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CP"
                ],
                "summary": "Get CP Details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Join Code",
                        "name": "join_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CpDetailDto"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid join code",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "CP details not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dashboard/events/{id_user}": {
            "get": {
                "description": "Retrieve all events associated with a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get User Events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id_user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ResponseEvents"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dashboard/{acara}/{count}/{page}": {
            "get": {
                "description": "Retrieve all dashboard data based on the specified event type (seminar, hackaton, cp).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get All Dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event type (seminar, hackaton, cp)",
                        "name": "acara",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "count",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dashboard/{acara}/{id}": {
            "put": {
                "description": "Update a specific dashboard event based on the event type and ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Update Dashboard Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event type (seminar, hackaton, cp)",
                        "name": "acara",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event data to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific dashboard event based on the event type and ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Delete Dashboard Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event type (seminar, hackaton, cp)",
                        "name": "acara",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/hackathon/{join_code}/status": {
            "get": {
                "description": "Get the status of a hackathon stage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hackathon"
                ],
                "summary": "Get Hackathon Stage Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hackathon Join Code",
                        "name": "join_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.HackatonStageStatus"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid join code",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/hackathon/{stage}/{join_code}": {
            "post": {
                "description": "Submit a hackathon entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hackathon"
                ],
                "summary": "Submit Hackathon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hackathon Stage",
                        "name": "stage",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hackathon Join Code",
                        "name": "join_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hackathon Submission Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RequestHackathon"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.HackathonTeam"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Submission failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/newsletter": {
            "post": {
                "description": "Create a new newsletter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Create Newsletter",
                "parameters": [
                    {
                        "description": "Create Newsletter",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateNewsLetterDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.NewsLetter"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Create failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/newsletter/{id}": {
            "get": {
                "description": "Get a newsletter by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Get Newsletter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Newsletter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.NewsLetter"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update a newsletter by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Update Newsletter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Newsletter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Newsletter",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateNewsLetterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.NewsLetter"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input or ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Update failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a newsletter by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Delete Newsletter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Newsletter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newsletter deleted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Delete failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/my": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get My Profile Data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserResponseDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update My Profile Data",
                "parameters": [
                    {
                        "description": "Update User Profile",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserProfileDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserResponseDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/team/registration/cp": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team Registration"
                ],
                "summary": "Register CP Team",
                "parameters": [
                    {
                        "description": "Register CP Team",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegistrationCPTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.RegistrationCPTeamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/team/registration/find/{join_code}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team Registration"
                ],
                "summary": "Find Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Join Code",
                        "name": "join_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.RegistraionTeamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/team/registration/hackathon": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team Registration"
                ],
                "summary": "Register Hackathon Team",
                "parameters": [
                    {
                        "description": "Register Hackathon Team",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegistrationHackathonTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.RegistrationHackathonTeamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/team/registration/join/{join_code}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team Registration"
                ],
                "summary": "Join Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Join Code",
                        "name": "join_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.RegistraionTeamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AuthResponseDTO": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserResponseDTO"
                }
            }
        },
        "dto.CpDetailDto": {
            "type": "object",
            "properties": {
                "domjudgePassword": {
                    "type": "string"
                },
                "domjudgeUsername": {
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.CreateNewsLetterDTO": {
            "type": "object",
            "required": [
                "id_admin",
                "news_letter",
                "title"
            ],
            "properties": {
                "base_image": {
                    "type": "string"
                },
                "id_admin": {
                    "type": "integer"
                },
                "news_letter": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.Event": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "payment_status": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "team": {
                    "$ref": "#/definitions/dto.Team"
                },
                "ticket": {
                    "$ref": "#/definitions/dto.Ticket"
                }
            }
        },
        "dto.HackatonStageStatus": {
            "type": "object",
            "properties": {
                "final": {
                    "type": "boolean"
                },
                "stage_1": {
                    "type": "boolean"
                },
                "stage_2": {
                    "type": "boolean"
                }
            }
        },
        "dto.Member": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshTokenDTO": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.RegistraionTeamResponse": {
            "type": "object",
            "required": [
                "supervisor",
                "supervisor_nidn",
                "team_name"
            ],
            "properties": {
                "bukti_pembayaran": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id_team": {
                    "type": "integer"
                },
                "leader": {
                    "$ref": "#/definitions/dto.Member"
                },
                "member": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Member"
                    }
                },
                "supervisor": {
                    "type": "string"
                },
                "supervisor_nidn": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.RegistrationCPResponse": {
            "type": "object",
            "properties": {
                "bukti_pembayaran": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "domjudge_password": {
                    "type": "string"
                },
                "domjudge_username": {
                    "type": "string"
                },
                "id_cp_team": {
                    "type": "integer"
                },
                "id_team": {
                    "type": "integer"
                },
                "join_code": {
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.RegistrationCPTeamRequest": {
            "type": "object",
            "required": [
                "supervisor",
                "supervisor_nidn",
                "team_name"
            ],
            "properties": {
                "bukti_pembayaran": {
                    "type": "string"
                },
                "supervisor": {
                    "type": "string"
                },
                "supervisor_nidn": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "dto.RegistrationCPTeamResponse": {
            "type": "object",
            "properties": {
                "cpteam": {
                    "$ref": "#/definitions/dto.RegistrationCPResponse"
                },
                "team": {
                    "$ref": "#/definitions/dto.RegistraionTeamResponse"
                }
            }
        },
        "dto.RegistrationHackathonResponse": {
            "type": "object",
            "properties": {
                "bukti_pembayaran": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id_HackathonTeam": {
                    "type": "integer"
                },
                "id_team": {
                    "type": "integer"
                },
                "join_code": {
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.RegistrationHackathonTeamRequest": {
            "type": "object",
            "required": [
                "supervisor",
                "supervisor_nidn",
                "team_name"
            ],
            "properties": {
                "bukti_pembayaran": {
                    "type": "string"
                },
                "supervisor": {
                    "type": "string"
                },
                "supervisor_nidn": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "dto.RegistrationHackathonTeamResponse": {
            "type": "object",
            "properties": {
                "hackathonTeam": {
                    "$ref": "#/definitions/dto.RegistrationHackathonResponse"
                },
                "team": {
                    "$ref": "#/definitions/dto.RegistraionTeamResponse"
                }
            }
        },
        "dto.RequestHackathon": {
            "type": "object",
            "properties": {
                "link_drive": {
                    "type": "string"
                }
            }
        },
        "dto.ResponseEvents": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Event"
                    }
                },
                "id_team": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.User"
                }
            }
        },
        "dto.Team": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Member"
                    }
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "dto.Ticket": {
            "type": "object",
            "properties": {
                "issued_at": {
                    "type": "string"
                },
                "qr_code_url": {
                    "type": "string"
                },
                "ticket_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "valid_until": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateNewsLetterDTO": {
            "type": "object",
            "properties": {
                "base_image": {
                    "type": "string"
                },
                "news_letter": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateUserProfileDTO": {
            "type": "object",
            "required": [
                "birth_date",
                "birth_place",
                "gender",
                "institusi",
                "name",
                "nim"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "birth_place": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "institusi": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nim": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "socmed_document": {
                    "type": "string"
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "degree": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponseDTO": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "data_has_verified": {
                    "type": "boolean"
                },
                "dokumen_filename": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "institusi": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nim": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_has_updated": {
                    "type": "boolean"
                },
                "profile_picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "socmed_document": {
                    "type": "string"
                }
            }
        },
        "dto.ValidateGoogleIdTokenDTO": {
            "type": "object",
            "required": [
                "google_id_token"
            ],
            "properties": {
                "google_id_token": {
                    "type": "string"
                }
            }
        },
        "entity.HackathonTeam": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "githubProjectUrl": {
                    "type": "string"
                },
                "id_HackathonTeam": {
                    "type": "integer"
                },
                "idteam": {
                    "type": "integer"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "pitchDeckUrl": {
                    "type": "string"
                },
                "proposalUrl": {
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "team": {
                    "$ref": "#/definitions/entity.Team"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.NewsLetter": {
            "type": "object",
            "properties": {
                "base_image": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id_admin": {
                    "type": "integer"
                },
                "id_news_letter": {
                    "type": "integer"
                },
                "news_letter": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Team": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "id_LeadTeam": {
                    "type": "integer"
                },
                "id_Team": {
                    "type": "integer"
                },
                "joinCode": {
                    "type": "string"
                },
                "komitmenFee": {
                    "type": "string"
                },
                "supervisor": {
                    "type": "string"
                },
                "supervisorNIDN": {
                    "type": "string"
                },
                "teamName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "helper.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api/v1/gcw/resources",
	Schemes:          []string{},
	Title:            "GCW API",
	Description:      "This is a sample server for GCW API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
